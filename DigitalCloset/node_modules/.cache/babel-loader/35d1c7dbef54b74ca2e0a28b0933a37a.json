{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/bear_wear/src/Components/Category.js\",\n    _s = $RefreshSig$();\n\nimport { render } from \"@testing-library/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { getStorage, ref, uploadBytes, listAll, getDownloadURL, deleteObject } from \"firebase/storage\"; // import UploadImages from \"./upload\";\n// import App from \"./upload\";\n\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth, storage } from \"../firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Category(props) {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [image, setImage] = useState({});\n  const [listUrl, setUrls] = useState([]);\n  onAuthStateChanged(auth, currentUser => {\n    setUser(currentUser);\n  });\n\n  function handleChange(e) {\n    if (e.target.files.length) {\n      setImage(e.target.files[0]);\n      console.log(image);\n    }\n  }\n\n  async function handleUpload(e) {\n    const path = `${user.uid}/${props.name}/${Date.now() + \"\"}`;\n    const storageRef = ref(storage, path);\n\n    if (image) {\n      uploadBytes(storageRef, image).then(snapshot => {\n        console.log('Uploaded a blob or file!');\n        getImage();\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  function getImage() {\n    const listRef = ref(storage, `${user.uid}/${props.name}`);\n    setUrls([]);\n    listAll(listRef).then(res => {\n      res.items.forEach(itemRef => {\n        const path = itemRef._location.path_;\n        const urlRef = ref(storage, path);\n        getDownloadURL(urlRef).then(url => {\n          //update the state\n          setUrls(oldArray => [...oldArray, url]);\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function deleteFromFirebase(url) {\n    let pictureRef = ref(storage, url);\n    deleteObject(pictureRef).then(() => {\n      const handleRemove = id => {\n        const newImages = url.filter(person => person.id !== id);\n      }; // deletes from firebase\n      // FIX ME - delete from your local url array\n\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  ;\n  useEffect(() => {\n    getImage();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"text-3xl text-center\",\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"border-black\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mt-20 lg:mx-20 grid gap-10 grid-cols-1 lg:grid-cols-4 grid-flow-row\",\n      children: listUrl.map(url => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"w-60 h-60 group relative object-cover\",\n          src: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemove(url),\n          class: \"absolute right-0 text-red-500  text-2xl font-base hidden group-hover:block\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Category, \"w9d99ECQmtnMCnmrflmV/s6OaTE=\");\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/Users/justin/Desktop/bear_wear/src/Components/Category.js"],"names":["render","React","useState","useEffect","getStorage","ref","uploadBytes","listAll","getDownloadURL","deleteObject","onAuthStateChanged","auth","storage","Category","props","user","setUser","image","setImage","listUrl","setUrls","currentUser","handleChange","e","target","files","length","console","log","handleUpload","path","uid","name","Date","now","storageRef","then","snapshot","getImage","catch","error","listRef","res","items","forEach","itemRef","_location","path_","urlRef","url","oldArray","deleteFromFirebase","pictureRef","handleRemove","id","newImages","filter","person","map"],"mappings":"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","sourcesContent":["import { render } from \"@testing-library/react\";\nimport React, { useState, useEffect} from \"react\";\nimport { getStorage, ref, uploadBytes, listAll, getDownloadURL, deleteObject } from \"firebase/storage\";\n// import UploadImages from \"./upload\";\n// import App from \"./upload\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth, storage } from \"../firebase-config\";\n\nfunction Category(props) {\n\n    const [user, setUser] = useState({});\n    const [image, setImage] = useState({});\n\n    const [listUrl, setUrls] = useState([]);\n\n    onAuthStateChanged(auth, (currentUser) => {\n        setUser(currentUser);\n    })\n\n    function handleChange(e) {\n   \n      if (e.target.files.length) {\n        setImage(e.target.files[0]);\n        console.log(image)\n      }\n    }\n  \n    async function handleUpload(e) {\n      \n      const path = `${user.uid}/${props.name}/${Date.now() + \"\"}`\n      const storageRef = ref(storage, path);\n\n      if (image) {\n      uploadBytes(storageRef, image).then((snapshot) => {\n        console.log('Uploaded a blob or file!');\n        getImage()\n      }).catch((error) => {\n        console.log(error);\n      });\n    }\n  }\n\n    function getImage() {\n      const listRef = ref(storage, `${user.uid}/${props.name}`);\n      setUrls([]);\n      listAll(listRef)\n        .then((res) => {\n          res.items.forEach((itemRef) => {\n            const path = itemRef._location.path_;\n            const urlRef = ref(storage, path);\n            getDownloadURL(urlRef).then((url) => {\n                //update the state\n                setUrls(oldArray => [...oldArray, url] );\n            });\n          });\n          }).catch((error) => {\n            console.log(error);\n          });\n    }\n\n    function deleteFromFirebase(url) {\n        let pictureRef = ref(storage, url);\n        deleteObject(pictureRef).then(() => {\n            const handleRemove = (id) => {\n            const newImages = url.filter((person) => person.id !== id);\n            \n          };\n         \n          // deletes from firebase\n          // FIX ME - delete from your local url array\n        }).catch((error) => {\n      console.log(error);\n      });\n    };\n      \n\n    useEffect(() => {\n      getImage() \n    }, [user]);\n    \n    return (\n        <>\n        <div class=\"text-3xl text-center\">\n          {props.name}\n        </div>\n        \n        <div class=\"text-center\">\n          <input type=\"file\" onChange = {handleChange} >\n          </input>\n\n          <button class=\"border-black\" onClick = {handleUpload}>\n            Upload\n          </button>\n        </div>\n\n        <div class=\"mt-20 lg:mx-20 grid gap-10 grid-cols-1 lg:grid-cols-4 grid-flow-row\">\n          {\n            listUrl.map(url => (\n              (\n                <div> \n                  <img class=\"w-60 h-60 group relative object-cover\" src={url} />\n                  <button onClick={() => handleRemove(url)} class=\"absolute right-0 text-red-500 \n                  text-2xl font-base hidden group-hover:block\">x</button>\n                </div>\n              )\n            ))\n          }\n        </div>\n        </>\n    )  \n    \n}\n       \n    \nexport default Category;"]},"metadata":{},"sourceType":"module"}