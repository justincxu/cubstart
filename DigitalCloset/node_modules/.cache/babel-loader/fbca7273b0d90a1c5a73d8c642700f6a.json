{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/BearWear/src/Components/Category.js\",\n    _s = $RefreshSig$();\n\nimport { render } from \"@testing-library/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { getStorage, ref, uploadBytes, listAll, getDownloadURL, deleteObject } from \"firebase/storage\"; // import UploadImages from \"./upload\";\n// import App from \"./upload\";\n\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth, storage } from \"../firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction getUser(string) {\n  if (string != null) {\n    return string.substring(0, string.indexOf(\"@\"));\n  }\n}\n\nfunction Category(props) {\n  _s();\n\n  var _auth$currentUser;\n\n  const [user, setUser] = useState({});\n  const [image, setImage] = useState({});\n  const [listUrl, setUrls] = useState([]);\n  onAuthStateChanged(auth, currentUser => {\n    setUser(currentUser);\n  });\n\n  function handleChange(e) {\n    if (e.target.files.length) {\n      setImage(e.target.files[0]);\n      console.log(image);\n    }\n  }\n\n  async function handleUpload(e) {\n    const path = `${user.uid}/${props.name}/${Date.now() + \"\"}`;\n    const storageRef = ref(storage, path);\n\n    if (image) {\n      uploadBytes(storageRef, image).then(snapshot => {\n        console.log('Uploaded a blob or file!');\n        getImage();\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  function getImage() {\n    const listRef = ref(storage, `${user.uid}/${props.name}`);\n    setUrls([]);\n    listAll(listRef).then(res => {\n      res.items.forEach(itemRef => {\n        const path = itemRef._location.path_;\n        const urlRef = ref(storage, path);\n        getDownloadURL(urlRef).then(url => {\n          //update the state\n          setUrls(oldArray => [...oldArray, url]);\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function deleteFromFirebase(url) {\n    let pictureRef = ref(storage, url);\n    deleteObject(pictureRef).then(() => {\n      const newImages = listUrl.filter(image => image !== url);\n      setUrls(newImages); // deletes from firebase\n      // FIX ME - delete from your local url array\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  ;\n  useEffect(() => {\n    getImage();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center m-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-flex text-3xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"text-sky-600/100 font-bold\",\n          children: getUser((_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.email)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"'s \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"border-black\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mt-20 lg:mx-20 grid gap-10 grid-cols-1 lg:grid-cols-4 grid-flow-row\",\n      children: listUrl.map(url => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteFromFirebase(url),\n          className: \"font-bold z-10 absolute right-14 text-red-500  text-4xl font-base hidden group-hover:block\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"w-60 h-60 group relative object-cover\",\n          src: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Category, \"w9d99ECQmtnMCnmrflmV/s6OaTE=\");\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/Users/justin/Desktop/BearWear/src/Components/Category.js"],"names":["render","React","useState","useEffect","getStorage","ref","uploadBytes","listAll","getDownloadURL","deleteObject","onAuthStateChanged","auth","storage","getUser","string","substring","indexOf","Category","props","user","setUser","image","setImage","listUrl","setUrls","currentUser","handleChange","e","target","files","length","console","log","handleUpload","path","uid","name","Date","now","storageRef","then","snapshot","getImage","catch","error","listRef","res","items","forEach","itemRef","_location","path_","urlRef","url","oldArray","deleteFromFirebase","pictureRef","newImages","filter","email","map"],"mappings":"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","sourcesContent":["import { render } from \"@testing-library/react\";\nimport React, { useState, useEffect} from \"react\";\nimport { getStorage, ref, uploadBytes, listAll, getDownloadURL, deleteObject } from \"firebase/storage\";\n// import UploadImages from \"./upload\";\n// import App from \"./upload\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth, storage } from \"../firebase-config\";\n\n\n function getUser(string) {\n   if (string != null) {\n      return (\n        string.substring(0, string.indexOf(\"@\"))\n      )\n      }\n    }\n\n  \nfunction Category(props) {\n\n    const [user, setUser] = useState({});\n    const [image, setImage] = useState({});\n\n    const [listUrl, setUrls] = useState([]);\n\n\n    onAuthStateChanged(auth, (currentUser) => {\n        setUser(currentUser);\n    })\n\n    function handleChange(e) {\n   \n      if (e.target.files.length) {\n        setImage(e.target.files[0]);\n        console.log(image)\n      }\n    }\n  \n    async function handleUpload(e) {\n      \n      const path = `${user.uid}/${props.name}/${Date.now() + \"\"}`\n      const storageRef = ref(storage, path);\n\n      if (image) {\n      uploadBytes(storageRef, image).then((snapshot) => {\n        console.log('Uploaded a blob or file!');\n        getImage()\n      }).catch((error) => {\n        console.log(error);\n      });\n    }\n  }\n\n    function getImage() {\n      const listRef = ref(storage, `${user.uid}/${props.name}`);\n      setUrls([]);\n      listAll(listRef)\n        .then((res) => {\n          res.items.forEach((itemRef) => {\n            const path = itemRef._location.path_;\n            const urlRef = ref(storage, path);\n            getDownloadURL(urlRef).then((url) => {\n                //update the state\n                setUrls(oldArray => [...oldArray, url] );\n            });\n          });\n          }).catch((error) => {\n            console.log(error);\n          });\n    }\n\n    function deleteFromFirebase(url) {\n        let pictureRef = ref(storage, url);\n        deleteObject(pictureRef).then(() => {\n            const newImages = listUrl.filter((image) => image !== url);\n            setUrls(newImages);\n\n          // deletes from firebase\n          // FIX ME - delete from your local url array\n        }).catch((error) => {\n      console.log(error);\n      });\n    };\n\n    useEffect(() => {\n      getImage() \n    }, [user]);\n    \n    return (\n        <>\n        <div className=\"text-center m-6\">\n          <div className=\"inline-flex text-3xl\">\n            <span class=\"text-sky-600/100 font-bold\" >\n            {getUser(auth.currentUser?.email)}      \n            </span>\n            <span>\n              's {props.name}\n            </span>\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <input type=\"file\" onChange = {handleChange} >\n          </input>\n\n          <button class=\"border-black\" onClick = {handleUpload}>\n            Upload\n          </button>\n        </div>\n\n        <div class=\"mt-20 lg:mx-20 grid gap-10 grid-cols-1 lg:grid-cols-4 grid-flow-row\">\n          {\n            listUrl.map(url => (\n              (\n                <div className=\"group relative\">\n                   <button onClick={() => deleteFromFirebase(url)} className=\"font-bold z-10 absolute right-14 text-red-500 \n                  text-4xl font-base hidden group-hover:block\">x</button>\n                  <img className=\"w-60 h-60 group relative object-cover\" src={url} />\n              \n                </div>\n              )\n            ))\n          }\n        </div>\n        </>\n    )  \n    \n}\n    \nexport default Category;\n"]},"metadata":{},"sourceType":"module"}