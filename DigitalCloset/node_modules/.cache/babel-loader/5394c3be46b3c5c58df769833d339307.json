{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/bear_wear/src/Components/Category.js\",\n    _s = $RefreshSig$();\n\nimport { render } from \"@testing-library/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { getStorage, ref, uploadBytes, listAll, getDownloadURL } from \"firebase/storage\"; // import UploadImages from \"./upload\";\n// import App from \"./upload\";\n\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"../firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Category(props) {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [image, setImage] = useState({});\n  const storage = getStorage();\n  const [listUrl, setUrls] = useState([]);\n  onAuthStateChanged(auth, currentUser => {\n    setUser(currentUser);\n  });\n\n  function handleChange(e) {\n    console.log(\"hello\");\n\n    if (e.target.files.length) {\n      setImage(e.target.files[0]);\n      console.log(image);\n      console.log(\"bye\");\n    }\n  }\n\n  async function handleUpload(e) {\n    const path = `${user.uid}/${props.name}/${Date().toLocaleString()}`;\n    const storageRef = ref(storage, path);\n    uploadBytes(storageRef, image).then(snapshot => {\n      console.log('Uploaded a blob or file!');\n      getImage();\n    });\n  }\n\n  function getImage() {\n    const listRef = ref(storage, `${user.id}/${props.name}`);\n    listAll(listRef).then(res => {\n      res.items.forEach(itemRef => {\n        const path = itemRef._location.path_;\n        const urlRef = ref(storage, path);\n        getDownloadURL(urlRef).then(url => {\n          //update the state\n          setUrls(oldArray => [...oldArray, url]);\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Category, \"+trsAV2A7wdyINAo8c5Bdiy/j/c=\");\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/Users/justin/Desktop/bear_wear/src/Components/Category.js"],"names":["render","React","useState","useEffect","getStorage","ref","uploadBytes","listAll","getDownloadURL","onAuthStateChanged","auth","Category","props","user","setUser","image","setImage","storage","listUrl","setUrls","currentUser","handleChange","e","console","log","target","files","length","handleUpload","path","uid","name","Date","toLocaleString","storageRef","then","snapshot","getImage","listRef","id","res","items","forEach","itemRef","_location","path_","urlRef","url","oldArray","catch","error"],"mappings":"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","sourcesContent":["import { render } from \"@testing-library/react\";\nimport React, { useState, useEffect} from \"react\";\nimport { getStorage, ref, uploadBytes, listAll, getDownloadURL } from \"firebase/storage\";\n// import UploadImages from \"./upload\";\n// import App from \"./upload\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"../firebase-config\";\n\nfunction Category(props) {\n\n    const [user, setUser] = useState({});\n    const [image, setImage] = useState({});\n\n    const storage = getStorage();\n\n    const [listUrl, setUrls] = useState([]);\n\n    onAuthStateChanged(auth, (currentUser) => {\n        setUser(currentUser);\n    })\n\n    function handleChange(e) {\n      console.log(\"hello\")\n      if (e.target.files.length) {\n        setImage(e.target.files[0]);\n        console.log(image)\n        console.log(\"bye\")\n      }\n    }\n  \n    async function handleUpload(e) {\n      \n      const path = `${user.uid}/${props.name}/${Date().toLocaleString()}`\n      const storageRef = ref(storage, path);\n\n      uploadBytes(storageRef, image).then((snapshot) => {\n        console.log('Uploaded a blob or file!');\n        getImage()\n      });\n    }\n\n    function getImage() {\n      const listRef = ref(storage, `${user.id}/${props.name}`);\n      listAll(listRef)\n        .then((res) => {\n          res.items.forEach((itemRef) => {\n            const path = itemRef._location.path_;\n            const urlRef = ref(storage, path);\n            getDownloadURL(urlRef).then((url) => {\n                //update the state\n                setUrls(oldArray => [...oldArray, url] );\n            });\n          });\n          }).catch((error) => {\n            console.log(error);\n          });\n    }\n    \n    return (\n        <>\n        <div>\n          <input type=\"file\" onChange = {handleChange} >\n            \n          </input>\n\n          <button>\n            Upload\n          </button>\n        </div>\n\n        </>\n    )  \n    \n}\n       \n    \n\nexport default Category;"]},"metadata":{},"sourceType":"module"}