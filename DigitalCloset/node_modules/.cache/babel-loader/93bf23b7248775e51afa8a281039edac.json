{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/bear_wear/src/Components/Category.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Category(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"upload\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"flex flex-col items-center text-2xl\",\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Category;\n\nfunction UploadImages() {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [imageURLs, setImageURLs] = useState([]);\n  useEffect(() => {\n    if (images.length < 1) return;\n    const newImageUrls = [];\n    images.forEach(image => newImageUrls.push(URL.createObjectURL(image)));\n    setImageURLs(newImageUrls);\n  }, [images]);\n\n  function onImageChange(e) {\n    setImages([...e.target.files]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      accept: \"image/*\",\n      onChange: onImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), imageURLs.map(imageSrc => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 39\n    }, this))]\n  }, void 0, true);\n}\n\n_s(UploadImages, \"fr82F1zyeYjIQbSiEMxUC4GLDoI=\");\n\n_c2 = UploadImages;\nexport default Category;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Category\");\n$RefreshReg$(_c2, \"UploadImages\");","map":{"version":3,"sources":["/Users/justin/Desktop/bear_wear/src/Components/Category.js"],"names":["React","useState","useEffect","Category","props","name","UploadImages","images","setImages","imageURLs","setImageURLs","length","newImageUrls","forEach","image","push","URL","createObjectURL","onImageChange","e","target","files","map","imageSrc"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACnB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,qCAAd;AAAA,gBAAqDA,KAAK,CAACC;AAA3D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;KAPIF,Q;;AAQL,SAASG,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,MAAM,CAACI,MAAP,GAAgB,CAApB,EAAuB;AACvB,UAAMC,YAAY,GAAG,EAArB;AACAL,IAAAA,MAAM,CAACM,OAAP,CAAeC,KAAK,IAAIF,YAAY,CAACG,IAAb,CAAkBC,GAAG,CAACC,eAAJ,CAAoBH,KAApB,CAAlB,CAAxB;AACAJ,IAAAA,YAAY,CAACE,YAAD,CAAZ;AACH,GALQ,EAKN,CAACL,MAAD,CALM,CAAT;;AAOA,WAASW,aAAT,CAAuBC,CAAvB,EAA0B;AACxBX,IAAAA,SAAS,CAAC,CAAC,GAAGW,CAAC,CAACC,MAAF,CAASC,KAAb,CAAD,CAAT;AACD;;AACD,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,MAA3B;AAA4B,MAAA,MAAM,EAAC,SAAnC;AAA6C,MAAA,QAAQ,EAAEH;AAAvD;AAAA;AAAA;AAAA;AAAA,YADF,EAEIT,SAAS,CAACa,GAAV,CAAcC,QAAQ,iBAAI;AAAK,MAAA,GAAG,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA,YAA1B,CAFJ;AAAA,kBADF;AAMD;;GApBQjB,Y;;MAAAA,Y;AAsBb,eAAeH,QAAf","sourcesContent":["import React, { useState, useEffect} from \"react\"; \n\nfunction Category(props) {\n      return (\n        <>\n          <upload />\n          <h1 className=\"flex flex-col items-center text-2xl\">{props.name}</h1>\n        </>\n      );\n    }\n    function UploadImages() {\n      const [images, setImages] = useState([]);\n      const [imageURLs, setImageURLs] = useState([]);\n    \n      useEffect(() => {\n          if (images.length < 1) return;\n          const newImageUrls = [];\n          images.forEach(image => newImageUrls.push(URL.createObjectURL(image)));\n          setImageURLs(newImageUrls);\n      }, [images]);\n    \n      function onImageChange(e) {\n        setImages([...e.target.files]);\n      }\n      return (\n        <>\n          <input type=\"file\" multiple accept=\"image/*\" onChange={onImageChange} />\n          { imageURLs.map(imageSrc => <img src={imageSrc} />) }\n        </>\n      );\n    }\n\nexport default Category;"]},"metadata":{},"sourceType":"module"}